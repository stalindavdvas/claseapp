#version:#'3.8'

#services:
##api:
####build:#.
####ports:
######-#"5000:5000"
####depends_on:
######-#postgres
######-#mongo
####environment:
######-#flask_app=app/__init__.py
######-#flask_env=development

##postgres:
####image:#postgres:13
####ports:
######-#"5434:5432"
####environment:
######postgres_db:#notas
######postgres_user:#postgres
######postgres_password:#stalin
####volumes:
########-#postgres_data:/var/lib/postgresql/data

##mongo:
####image:#mongo:5.0
####ports:
######-#"27018:27017"
####volumes:
######-#mongo_data:/data/db
#volumes:
####postgres_data:
####mongo_data:
version: '3.8'

services:
  api:
    build: .  # Ruta correcta al directorio de la API
    ports:
      - "5000:5000"
    depends_on:
      - postgres
      - mongo
      - auth_service
    environment:
      - flask_app=app/__init__.py
      - flask_env=development
      - AUTH_SERVICE_URL=http://auth_service:5001
    networks:
      - app_network

  auth_service:
    build: ./auth-service  # Ruta correcta al directorio del servicio de autenticaci√≥n
    ports:
      - "5001:5001"
    networks:
      - app_network

  postgres:
    image: postgres:13
    ports:
      - "5434:5432"
    environment:
      POSTGRES_DB: notas
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: stalin
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network

  mongo:
    image: mongo:5.0
    ports:
      - "27018:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
  mongo_data:

